"""
Model-specific params (Model: tCNNS)
If no params are required by the model, then it should be an empty list.
"""

preprocess_params = [
    {   "name": "original_data",
        "type": str, 
        "help": "file of compressed original data before preprocessing",
    },
    {   "name": "data_subdir",
        "type": str, 
        "help": "name of folder containing preprocessed data",
    },
    {   "name": "raw_data_subdir",
        "type": str, 
        "help": "name of folder containing raw data",
    },
    {   "name": "raw_genetic_features_file",
        "type": str, 
        "help": "name of file containing genetic features (mutation state and copy number alteration) in GDSC format",
    },  
    {   "name": "raw_drug_features_file",
        "type": str, 
        "help": "name of file containing drug features (SMILES)",
    },  
    {   "name": "raw_drug_response_file",
        "type": str, 
        "help": "name of file containing drug response data",
    },
        {
        "name": "drug_id",
        "type": str,
        "help": "drug identifier",
    },
        {
        "name": "cell_id",
        "type": str,
        "help": "cell line identifier",
    },
    {
        "name": "gdsc_gene_file",
        "type": str,
        "help": "file of genes corresponding to GDSC genetic features",
    },
    {
        "name": "use_original_data",
        "type": bool,
        "help": "indicates whether to use original data and processing code specific to this data",
    },   
]

train_params = [
    {   "name": "drug_conv_width",
        "type": int,
        "nargs": "+",
        "help": "convolution width for each drug convolutional layer",
    },
    {   "name": "drug_conv_out",
        "type": int,
        "nargs": "+", 
        "help": "number of channels for each drug convolutional layer",
    },
    {   "name": "drug_pool",
        "type": int,
        "nargs": "+", 
        "help": "max pooling width and pooling stride for each drug convolutional layer",
    },
    {   "name": "bias_constant",
        "type": float, 
        "help": "value for initializing the bias variable",
    },
    {   "name": "std_dev",
        "type": float, 
        "help": "value for standard deviation parameter of truncated normal distribution related to initializing the weight variable",
    },
    {   "name": "min_loss",
        "type": float, 
        "help": "value for initial minimum loss used for early stopping",
    },
    {   "name": "train_size",
        "type": float, 
        "help": "value for proportion of samples to be used for training; must be a value from 0.0 to 1.0",
    },
    {   "name": "val_size",
        "type": float, 
        "help": "value for proportion of samples to be used for validation; must be a value from train_size to 1.0",
    },
    {   "name": "cell_conv_width",
        "type": int,
        "nargs": "+",
        "help": "convolution width for each cell convolutional layer",
    },
    {   "name": "cell_conv_out",
        "type": int,
        "nargs": "+",
        "help": "number of channels for each cell convolutional layer",
    },
    {   "name": "cell_pool",
        "type": int,
        "nargs": "+", 
        "help": "max pooling width and pooling stride for each cell convolutional layer",
    },
    {   "name": "conv_stride",
        "type": int, 
        "help": "convolution stride",
    }, 
    {   "name": "cell_file",
        "type": str, 
        "help": "file of preprocessed cell data",
    }, 
    {   "name": "dense",
        "type": int,
        "nargs": "+", 
        "help": "number of nodes for each dense layer",
    }, 
    {   "name": "drug_file",
        "type": str, 
        "help": "file of preprocessed drug data",
    },  
    {   "name": "response_file",
        "type": str, 
        "help": "file of preprocessed response data",
    },
    {   "name": "processed_data",
        "type": str, 
        "help": "file of compressed preprocessed data",
    },
    
    {   "name": "es_epochs",
        "type": int, 
        "help": "value for the number of epochs to use to stop training if the RMSE on the validation set does not decrease",
    },     
    {
        "name": "label_name",
        "type": str,
        "nargs": "+",
        "help": "drug response indicator (i.e. IC50 or AUC)",
    }, 
    {
        "name": "cache_subdir",
        "type": str,
        "help": "name of folder to store processed data from server",
    }, 
    {
        "name": "use_original_data",
        "type": bool,
        "help": "indicates whether to use original data and processing code specific to this data",
    },   
    {
        "name": "norm",
        "type": bool,
        "help": "indicates whether response values have been normalized",
    },    
    {
        "name": "test_indices_file",
        "type": str,
        "help": "file containing indices for test split of original data",
    },
    {
        "name": "model_weights_file",
        "type": str,
        "help": "file of trained model's weights",
    },
    {
        "name": "rng_seed",
        "type": int,
        "help": "random seed",
        "default": 123,
    },
    {
        "name": "out_activation",
        "type": str,
        "help": "activation function of output layer",
    },
    {
        "name": "dropout",
        "type": float,
        "help": "percentage of nodes to randomly drop out during training",
    },
]

infer_params = [
    {
        "name": "use_original_data",
        "type": bool,
        "help": "indicates whether to use original data and processing code specific to this data",
    }, 
    {   
        "name": "data_subdir",
        "type": str, 
        "help": "name of folder containing preprocessed data",
    }, 
    {   
        "name": "cell_file",
        "type": str, 
        "help": "file of preprocessed cell data",
    }, 
    {   
        "name": "drug_file",
        "type": str, 
        "help": "file of preprocessed drug data",
    },  
    {   
        "name": "response_file",
        "type": str, 
        "help": "file of preprocessed response data",
    },
    {
        "name": "test_indices_file",
        "type": str,
        "help": "file containing indices for test split of original data",
    },
    {
        "name": "model_weights_file",
        "type": str,
        "help": "file of trained model's weights",
    },
    
]
